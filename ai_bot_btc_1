import numpy as np
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression

# Data
data = [1, 3, 7, 8, 21, 49, 76, 224, 467, 514, 1155, 2683, 5216, 10544,
        26867, 51510, 95823, 198669, 357535, 863317, 1811764, 3007503,
        5598802, 14428676, 33185509, 54538862, 111949941, 227634408,
        400708894, 1033162084, 2102388551, 3093472814, 7137437912,
        14133072157, 20112871792, 42387769980, 100251560595,
        146971536592, 323724968937, 1003651412950, 1458252205147,
        2895374552463, 7409811047825, 15404761757071, 19996463086597,
        51408670348612, 119666659114170, 191206974700443,
        409118905032525, 611140496167764, 2058769515153876,
        4216495639600700, 6763683971478124, 9974455244496707,
        30045390491869460, 44218742292676575, 138245758910846492,
        199976667976342049, 525070384258266191, 1135041350219496382,
        1425787542618654982, 3908372542507822062, 8993229949524469768,
        17799667357578236628, 30568377312064202855, 46346217550346335726]

# Preparing data
X = np.array(range(len(data))).reshape(-1, 1)  # Indices
y = np.array(data)  # Numbers

# Choosing the degree of the polynomial
degree = 9  # Change as needed
poly_features = PolynomialFeatures(degree=degree)
X_poly = poly_features.fit_transform(X)

# Training the model
model = LinearRegression()
model.fit(X_poly, y)

# Predicting the next number (index equals the length of the data array)
next_index = np.array([[len(data)]])  # Index of the next number
next_index_poly = poly_features.transform(next_index)
predicted_value = model.predict(next_index_poly)

# Converting to hex by removing '0x', adding leading zeros to 64 characters, and removing trailing zeros
predicted_value_hex = hex(int(predicted_value[0]))[2:].zfill(64).rstrip('0')

print(f"Predicted next number: {predicted_value[0]}")
print(f"Predicted next number in hex (64 characters without trailing zeros): {predicted_value_hex}")
